//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataProcessNoa.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NOAEntities : DbContext
    {
        public NOAEntities()
            : base("name=NOAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<CustomerVoucher> CustomerVoucher { get; set; }
        public virtual DbSet<CustomerVoucherList> CustomerVoucherList { get; set; }
        public virtual DbSet<ContactForm> ContactForm { get; set; }
        public virtual DbSet<Video> Video { get; set; }
        public virtual DbSet<Social> Social { get; set; }
        public virtual DbSet<HomeTabPage> HomeTabPage { get; set; }
        public virtual DbSet<Contact> Contact { get; set; }
        public virtual DbSet<Blog> Blog { get; set; }
        public virtual DbSet<Question> Question { get; set; }
        public virtual DbSet<Slider> Slider { get; set; }
        public virtual DbSet<Page> Page { get; set; }
    
        public virtual ObjectResult<Nullable<int>> SP_CHECK_VOUCHER_NO(Nullable<int> voucherStartNo, Nullable<int> voucherAmount)
        {
            var voucherStartNoParameter = voucherStartNo.HasValue ?
                new ObjectParameter("VoucherStartNo", voucherStartNo) :
                new ObjectParameter("VoucherStartNo", typeof(int));
    
            var voucherAmountParameter = voucherAmount.HasValue ?
                new ObjectParameter("VoucherAmount", voucherAmount) :
                new ObjectParameter("VoucherAmount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_CHECK_VOUCHER_NO", voucherStartNoParameter, voucherAmountParameter);
        }
    
        public virtual ObjectResult<SP_GET_CUSTOMER_LIST_Result> SP_GET_CUSTOMER_LIST()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CUSTOMER_LIST_Result>("SP_GET_CUSTOMER_LIST");
        }
    }
}
